<?xml version="1.0"?>

<bindings xmlns="http://www.mozilla.org/xbl"
    xmlns:xbl="http://www.mozilla.org/xbl"
    xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

<binding id="tagFirePHPUIToolbar">
    <content>
        <xul:hbox anonid="tabBox" class="panelTabBox" collapsed="false">
            <children/>
            <xul:spacer flex="1"/>
        </xul:hbox>
    </content>
    
    <implementation>
        <constructor><![CDATA[
            this.tabBox = document.getAnonymousElementByAttribute(this, "anonid", "tabBox");
            this.itemMap = new Array();
        ]]></constructor>
     
        <method name="createTab">
            <parameter name="info"/>
            <body><![CDATA[
            var tab = document.createElement("panelTab");
            tab.info = info;
            tab.setAttribute("label", info.title);

            return this.itemMap[info.name] = tab;
            ]]></body>
        </method>
     
        <method name="createToggle">
            <parameter name="info"/>
            <body><![CDATA[
            var tab = document.createElement("toolbarbutton");
            tab.info = info;
            tab.setAttribute("class", "toolbar-text-button");
            tab.setAttribute("label", info.title);

            return this.itemMap[info.name] = tab;
            ]]></body>
        </method>
     
        <method name="createButton">
            <parameter name="info"/>
            <body><![CDATA[
            var tab = document.createElement("toolbarbutton");
            tab.info = info;
            tab.setAttribute("class", "toolbar-text-button");
            tab.setAttribute("label", info.title);

            return this.itemMap[info.name] = tab;
            ]]></body>
        </method>
        
        <method name="addItem">
            <parameter name="info"/>
            <body><![CDATA[
            var item = null;
            switch(info.type) {
              case 'tab':
                item = this.createTab(info);
                break;
              case 'toggle':
                item = this.createToggle(info);
                break;
              case 'button':
                item = this.createButton(info);
                break;
            }
            if(item) {
            	this.appendChild(item);
            }
            return item;
            ]]></body>
        </method>        
    </implementation>

    <handlers>
      <handler event="mousedown" button="0"><![CDATA[
          var item = event.target;
          for (; item && !item.info; item = item.parentNode);
          if (item) {
	          setTimeout(FBL.bindFixed(function() { new FirePHPChannelEvent('UI','mousedown',{Item:item}).trigger(); }, this));
          }
        ]]></handler>
    </handlers>

</binding>

</bindings>